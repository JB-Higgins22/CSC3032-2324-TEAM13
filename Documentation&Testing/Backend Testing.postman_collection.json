{
	"info": {
		"_postman_id": "4a7562b7-16eb-4520-9886-4db93b99d872",
		"name": "Backend Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33729715"
	},
	"item": [
		{
			"name": "Public",
			"item": [
				{
					"name": "addReflection - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"// Stores the reflection ID in an environment or global variable\r",
									"var reflectionID = pm.response.json().id;\r",
									"pm.environment.set(\"reflectionID\", reflectionID);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"userName\":\"test\",\r\n\"userLocation\":\"test\",\r\n\"userReflection\":\"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/addreflection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"addreflection"
							]
						}
					},
					"response": []
				},
				{
					"name": "addReflection - Failure (no data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/addreflection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"addreflection"
							]
						}
					},
					"response": []
				},
				{
					"name": "getapprovedreflections - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/getapprovedreflections",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"getapprovedreflections"
							]
						}
					},
					"response": []
				},
				{
					"name": "login - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Save the token from the response into an environment variable\r",
									"var data = pm.response.json();\r",
									"pm.environment.set(\"token\", data.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"user\",\r\n    \"password\":\"pass\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "addissue - Failure(no token)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test\",\r\n    \"descriptionOne\": \"test\",\r\n    \"descriptionTwo\": \"test\",\r\n    \"imageURL\": \"test\",\r\n    \"numberOfOptions\": \"2\",\r\n    \"selectedOption\": \"X\",\r\n    \"optionA\": \"test\",\r\n    \"optionANationalistWeight\": \"1\",\r\n    \"optionANationalistPerspective\": \"test\",\r\n    \"optionAUnionistWeight\": \"1\",\r\n    \"optionAUnionistPerspective\": \"test\",\r\n    \"optionB\": \"test\",\r\n    \"optionBNationalistWeight\": \"1\",\r\n    \"optionBNationalistPerspective\": \"test\",\r\n    \"optionBUnionistWeight\": \"1\",\r\n    \"optionBUnionistPerspective\": \"test\",\r\n    \"optionC\": \"\",\r\n    \"optionCNationalistWeight\": 0,\r\n    \"optionCNationalistPerspective\": \"\",\r\n    \"optionCUnionistWeight\": 0,\r\n    \"optionCUnionistPerspective\": \"\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/addissue",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"addissue"
							]
						}
					},
					"response": []
				},
				{
					"name": "login - Failure (invalid username)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"test\",\r\n    \"password\":\"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "issuecount - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"userName\":\"test\",\r\n\"userLocation\":\"test\",\r\n\"userReflection\":\"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/issuecount",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"issuecount"
							]
						}
					},
					"response": []
				},
				{
					"name": "issues - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"userName\":\"test\",\r\n\"userLocation\":\"test\",\r\n\"userReflection\":\"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/issues",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"issues"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "checkUser - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/checkUser",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"checkUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "checkUser - Failure (invalid token)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "\"Bearer 1\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/checkUser",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"checkUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "checkUser - Failure (no token)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "\"Bearer 1\"",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/checkUser",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"checkUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "reflections - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/reflections",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"reflections"
							]
						}
					},
					"response": []
				},
				{
					"name": "reflections - Failure (no token)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/reflections",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"reflections"
							]
						}
					},
					"response": []
				},
				{
					"name": "approvereflection - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"userName\":\"test\",\r\n\"userLocation\":\"test\",\r\n\"userReflection\":\"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/approvereflection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"approvereflection"
							]
						}
					},
					"response": []
				},
				{
					"name": "approvereflection - Failure (no data)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/approvereflection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"approvereflection"
							]
						}
					},
					"response": []
				},
				{
					"name": "approvereflection - Failure (no token)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/approvereflection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"approvereflection"
							]
						}
					},
					"response": []
				},
				{
					"name": "removedapprovedreflections - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/removeapprovedreflections",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"removeapprovedreflections"
							]
						}
					},
					"response": []
				},
				{
					"name": "removedapprovedreflections - Failure (no token)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/removeapprovedreflections",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"removeapprovedreflections"
							]
						}
					},
					"response": []
				},
				{
					"name": "deletereflection/{reflectionId) - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");\r",
									"const reflectionID = pm.environment.get(\"reflectionID\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "token",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/deletereflection/{{reflectionID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"deletereflection",
								"{{reflectionID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deletereflection/{reflectionId} - Failure (no token)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");\r",
									"const reflectionID = pm.environment.get(\"reflectionID\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/deletereflection/{{reflectionID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"deletereflection",
								"{{reflectionID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "addissue - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const token = pm.globals.get(\"variable_key\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test\",\r\n    \"descriptionOne\": \"test\",\r\n    \"descriptionTwo\": \"test\",\r\n    \"imageURL\": \"test\",\r\n    \"numberOfOptions\": \"2\",\r\n    \"selectedOption\": \"X\",\r\n    \"optionA\": \"test\",\r\n    \"optionANationalistWeight\": \"1\",\r\n    \"optionANationalistPerspective\": \"test\",\r\n    \"optionAUnionistWeight\": \"1\",\r\n    \"optionAUnionistPerspective\": \"test\",\r\n    \"optionB\": \"test\",\r\n    \"optionBNationalistWeight\": \"1\",\r\n    \"optionBNationalistPerspective\": \"test\",\r\n    \"optionBUnionistWeight\": \"1\",\r\n    \"optionBUnionistPerspective\": \"test\",\r\n    \"optionC\": \"\",\r\n    \"optionCNationalistWeight\": 0,\r\n    \"optionCNationalistPerspective\": \"\",\r\n    \"optionCUnionistWeight\": 0,\r\n    \"optionCUnionistPerspective\": \"\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/addissue",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"addissue"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}